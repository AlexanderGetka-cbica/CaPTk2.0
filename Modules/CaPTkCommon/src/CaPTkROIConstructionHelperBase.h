#ifndef CaPTkROIConstructionHelperBase_h
#define CaPTkROIConstructionHelperBase_h

// The following header file is generated by CMake and thus it's located in
// the build directory. It provides an export macro for classes and functions
// that you want to be part of the public interface of your module.
#include <MitkCaPTkCommonExports.h>

#include <mitkLabelSetImage.h>

#include <string>
#include <vector>

namespace captk
{
/** \class ROIConstructionHelperBase
 * \brief Non-templated class to serve as base class for ROIConstructionHelper
 */
class MITKCAPTKCOMMON_EXPORT ROIConstructionHelperBase
{
public:
    ROIConstructionHelperBase() {}

    virtual ~ROIConstructionHelperBase() {}

    enum MODE
    {
        ROI_BASED,
        FULL
    };

    virtual void Update(
        float /*radius*/,
        float /*step*/)
    {
        // Cannot have pure virtual because ++ overloading needs instance
    }

    virtual void GoToBegin()
    {

    }

    virtual bool IsAtEnd()
    {
        return true; // Return is required and we don't want this to be pure virtual
    }

    // virtual void SetValuesAndNames(mitk::LabelSet::Pointer labelSet) = 0;

    /** \brief ++ overloading to go to the next lattice */
    ROIConstructionHelperBase &operator++() // prefix
    {
        this->OnIncrement(); // call actual operation function
        return *this;
    }

    /** \brief ++ overloading to go to the next lattice */
    ROIConstructionHelperBase operator++(int) // postfix (calls suffix)
    {
        ROIConstructionHelperBase tmp(*this);
        ++*this; // call suffix
        return tmp;
    }

    void SetMode(MODE mode)
    {
        m_Mode = mode;
    }

    virtual float PopulateMask(
        mitk::LabelSetImage::Pointer& /*rMask*/,
        mitk::Label::PixelType /*labelValue*/)
    {
        return 0.0f; // Return is required and we don't want this to be pure virtual
    }

protected:
    virtual void OnIncrement()
    {

    }

    MODE m_Mode = MODE::ROI_BASED;
};
} // namespace captk

#endif // ! CaPTkROIConstructionHelperBase_h