#ifndef CaPTkROIConstructionHelperItk_h
#define CaPTkROIConstructionHelperItk_h

// The following header file is generated by CMake and thus it's located in
// the build directory. It provides an export macro for classes and functions
// that you want to be part of the public interface of your module.
#include <MitkCaPTkCommonExports.h>

#include "CaPTkROIConstructionHelperBase.h"
#include "CaPTkROIConstructionImplementation.h"

#include <mitkImageCast.h>
#include <itkExtractImageFilter.h>
#include <mitkImageAccessByItk.h>
#include <mitkITKImageImport.h>
#include <mitkLogMacros.h>

#include "itkImageRegionIteratorWithIndex.h"

#include <string>

namespace captk
{
template <typename TPixel, unsigned int VImageDimension>
class MITKCAPTKCOMMON_EXPORT ROIConstructionHelperItk :
                      public ROIConstructionHelperBase
{
public:

    using TImageType = itk::Image<TPixel, VImageDimension>;
    using TImageTypePointer = typename TImageType::Pointer;

    ROIConstructionHelperItk(TImageTypePointer mask);

    ~ROIConstructionHelperItk();

    void SetValuesAndNames(
        std::vector<int> values, 
        std::vector<std::string> names) override;

    /** \brief Find all the different lattice points
     * 
     * See CaPTkROIConstructionImplementation for what the parameters are
     */
    void Update(
        float radius,
        float step//, 
        // bool  fluxNeumannCondition,
        // bool  patchConstructionROI,
        // bool  patchConstructionNone
        ) override;

    float PopulateMask(mitk::LabelSetImage::Pointer miniMask) override;

    void GoToBegin() override;

    bool IsAtEnd() override;

    void OnIncrement() override;

private:

    std::vector<
        typename captk::ROIConstructionImplementation<TImageType>::ROIProperties
    > m_Properties;

    TImageTypePointer m_Mask;
    std::vector<int> m_Values;
    std::vector<std::string> m_Names;

    size_t m_CurrentIndex = 0;
};
}

#include "CaPTkROIConstructionHelperItk.hxx"

#endif // ! CaPTkROIConstructionHelperItk_h