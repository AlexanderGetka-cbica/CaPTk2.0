#ifndef CaPTkCohortOperations_h
#define CaPTkCohortOperations_h

// The following header file is generated by CMake and thus it's located in
// the build directory. It provides an export macro for classes and functions
// that you want to be part of the public interface of your module.
#include <MitkCaPTkCommonExports.h>

namespace captk
{
class Cohort;
}

#include <QObject>
#include <QString>
#include <QStringList>
#include <QList>
#include <QSharedPointer>
#include <QJsonDocument>

#include <string>
#include <vector>

namespace captk
{

/** \brief Merge multiple cohorts into one
 *
 * Each subject that appears on multiple will have it's images concatenated
 * \param cohorts list of all the cohorts to be merged
 * \return a unified cohort
 */
MITKCAPTKCOMMON_EXPORT QSharedPointer<captk::Cohort> 
CohortMerge(QList<QSharedPointer<captk::Cohort>> cohorts);

/** \brief Get a QJsonDocument containing the information of a cohort from file */
MITKCAPTKCOMMON_EXPORT QSharedPointer<QJsonDocument> 
CohortJsonFromDirectoryStructure(QString& directory);

/** \brief Load from json -> captk::Cohort */
MITKCAPTKCOMMON_EXPORT QSharedPointer<captk::Cohort> 
CohortJsonLoad(QSharedPointer<QJsonDocument> json);

MITKCAPTKCOMMON_EXPORT QSharedPointer<QJsonDocument>
CohortToJson(QSharedPointer<captk::Cohort> cohort);

/** \namespace internal 
 * \brief Contains helper functions for cohort processing
 */
namespace internal
{
	// ---- For cohort merging ----

	// MITKCAPTKCOMMON_EXPORT bool 
	// IsImageInList(
	// 	captk::CohortImage* image,
	// 	QList<captk::CohortImage*> list
	// );

	// MITKCAPTKCOMMON_EXPORT captk::Series*

	// ---- Basic operations ----

	MITKCAPTKCOMMON_EXPORT QStringList GetSubdirectories(QString& directory);
	MITKCAPTKCOMMON_EXPORT QStringList GetFilesInDir(QString& directory);
	MITKCAPTKCOMMON_EXPORT QString GetFileNameFromPath(QString& path);
	MITKCAPTKCOMMON_EXPORT bool IsDir(QString& path);
}

}

#endif // ! #ifndef CaPTkCohortOperations_h